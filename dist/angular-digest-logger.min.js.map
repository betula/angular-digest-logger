{"version":3,"sources":["angular-digest-logger.min.js"],"names":["angular","document","ng","module","controller","$scope","$attrs","$rootScope","$log","once","callback","called","apply","this","arguments","lastLogDate","postDigestLogger","_apply","_digest","getLoggerName","loggerName","logAction","action","name","log","date","Date","push","getMinutes","getSeconds","getTime","join","$apply","result","$digest","$watch","$$postDigest","directive","digestLogger","enabled","restrict","priority","provider","_useCookie","_cookieName","_enabled","useCookie","flag","cookieName","$get","cookie","indexOf","window"],"mappings":"CAAC,SAAUA,EAASC,GAGpB,GAAIC,GAAKF,EAAQG,OAAO,kBAGxBD,GAAGE,WAAW,0BACZ,SACA,SACA,aACA,OACA,SAASC,EAAQC,EAAQC,EAAYC,GA4DnC,QAASC,GAAKC,GACZ,GACEC,IAAS,CACX,OAAO,YACL,MAAKA,GAAL,QACEA,GAAS,EACFD,EAASE,MAAMC,KAAMC,aAjElC,GAIEC,GAmBAC,EACAC,EACAC,EAxBAC,EAAgB,WACd,MAAOb,GAAOc,YAGhBC,EAAY,SAASC,GACnB,GACEC,GAAOJ,IACPK,KACAC,EAAO,GAAIC,KACTH,IACFC,EAAIG,KAAKJ,GAEPD,GACFE,EAAIG,KAAKL,GAEPP,IACFS,EAAIG,KAAKF,EAAKG,aAAe,IAAMH,EAAKI,cACxCL,EAAIG,KAAMF,EAAKK,UAAYf,EAAYe,UAAa,OAEtDf,EAAcU,EACdjB,EAAKgB,IAAIA,EAAIO,KAAK,MAMtBd,GAASV,EAAWyB,OACpBzB,EAAWyB,OAAS,WAClB,GACEC,EAIF,OAHAZ,GAAU,cACVY,EAAShB,EAAOL,MAAMC,KAAMC,WAC5BO,EAAU,cACHY,GAGTf,EAAUX,EAAW2B,QACrB3B,EAAW2B,QAAU,WACnB,GACED,EAIF,OAHAZ,GAAU,eACVY,EAASf,EAAQN,MAAMC,KAAMC,WAC7BO,EAAU,eACHY,GAGT5B,EAAO8B,OAAO,WACZd,EAAU,aACLL,IACHA,EAAmBP,EAAK,WACtBY,EAAU,iBACVL,EAAmB,QAIvBX,EAAO+B,aAAapB,QAgB1Bd,EAAGmC,UAAU,QAAS,eAAgB,SAASC,GAC7C,MAAOA,GAAaC,SAEhBC,SAAU,IACVC,SAAU,IAEVrC,WAAY,0BAEZ,gBAGNF,EAAGmC,UAAU,gBACX,WACE,OACEI,SAAU,IAEVrC,WAAY,6BAKlBF,EAAGwC,SAAS,eAAgB,WAC1B,GACEC,IAAa,EACbC,EAAc,kBACdC,GAAW,CAEbhC,MAAKiC,UAAY,SAASC,EAAMC,GACX,mBAARD,KACTA,GAAO,GAGLC,IACFJ,EAAcI,GAEhBL,EAAaI,GAGflC,KAAK0B,QAAU,SAASQ,GACH,mBAARA,KACTA,GAAO,GAETF,EAAWE,GAGblC,KAAKoC,MAAQ,WAEX,OACEV,QAASM,GACL,EACAF,GAAc1C,EAASiD,OAAOC,QAAQP,GAAe,SAO5DQ,OAAOpD,QAASoD,OAAOnD","file":"angular-digest-logger.min.js","sourcesContent":[";(function(angular, document) {\n\n\nvar ng = angular.module('digestLogger', []);\n\n\nng.controller('DigestLoggerController', [\n  '$scope',\n  '$attrs',\n  '$rootScope',\n  '$log',\n  function($scope, $attrs, $rootScope, $log){\n    var\n      getLoggerName = function() {\n        return $attrs.loggerName;\n      },\n      lastLogDate,\n      logAction = function(action){\n        var\n          name = getLoggerName(),\n          log = [],\n          date = new Date();\n        if (name) {\n          log.push(name);\n        }\n        if (action) {\n          log.push(action);\n        }\n        if (lastLogDate) {\n          log.push(date.getMinutes() + ':' + date.getSeconds());\n          log.push((date.getTime() - lastLogDate.getTime()) + 'ms');\n        }\n        lastLogDate = date;\n        $log.log(log.join(' '));\n      },\n      postDigestLogger,\n      _apply,\n      _digest;\n\n    _apply = $rootScope.$apply;\n    $rootScope.$apply = function() {\n      var\n        result;\n      logAction('> $apply()');\n      result = _apply.apply(this, arguments);\n      logAction('< $apply()');\n      return result;\n    };\n\n    _digest = $rootScope.$digest;\n    $rootScope.$digest = function() {\n      var\n        result;\n      logAction('> $digest()');\n      result = _digest.apply(this, arguments);\n      logAction('< $digest()');\n      return result;\n    };\n\n    $scope.$watch(function() {\n      logAction('. $digest');\n      if (!postDigestLogger) {\n        postDigestLogger = once(function() {\n          logAction('. $postDigest');\n          postDigestLogger = null;\n        });\n      }\n\n      $scope.$$postDigest(postDigestLogger);\n    });\n\n    function once(callback) {\n      var\n        called = false;\n      return function() {\n        if (!called) {\n          called = true;\n          return callback.apply(this, arguments);\n        }\n      }\n    }\n  }\n]);\n\nng.directive('body', ['digestLogger', function(digestLogger) {\n  return digestLogger.enabled\n    ? {\n      restrict: 'E',\n      priority: 2000,\n      // Use controller only for priority\n      controller: 'DigestLoggerController'\n    }\n    : function(){}\n}]);\n\nng.directive('digestLogger', [\n  function() {\n    return {\n      priority: 2000,\n      // Use controller only for priority\n      controller: 'DigestLoggerController'\n    };\n  }\n]);\n\nng.provider('digestLogger', function() {\n  var\n    _useCookie = true,\n    _cookieName = '--digest-logger',\n    _enabled = false;\n\n  this.useCookie = function(flag, cookieName) {\n    if (typeof flag == 'undefined') {\n      flag = true;\n    }\n\n    if (cookieName) {\n      _cookieName = cookieName;\n    }\n    _useCookie = flag;\n  };\n\n  this.enabled = function(flag) {\n    if (typeof flag == 'undefined') {\n      flag = true;\n    }\n    _enabled = flag;\n  };\n\n  this.$get = [function() {\n\n    return {\n      enabled: _enabled\n        ? true\n        : _useCookie && document.cookie.indexOf(_cookieName) > -1\n    };\n\n  }];\n\n});\n\n})(window.angular, window.document);"],"sourceRoot":"/source/"}